// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  userID    Int    @id @unique @default(autoincrement())
  firstName String
  lastName  String
  email     String
  password  String

  Website     Website[]
  postFinally postFinally?
}

model Website {
  websiteID  Int    @id @unique @default(autoincrement())
  urlwebsite String

  //Relações: 
  userID Int
  User   User @relation(fields: [userID], references: [userID])

  linksExtract linksExtract[]
  webConfig    webConfig?
}

model webConfig {
  webConfigID     Int     @id @unique @default(autoincrement())
  typeAwaitLoad   String
  selectAwaitLoad String?
  selectorPosts   String
  selectorTitle   String
  selectorContent String
  websiteID       Int     @unique
  Website         Website @relation(fields: [websiteID], references: [websiteID])
}

model linksExtract {
  linkID      Int          @id @unique @default(autoincrement())
  link        String       @unique
  websiteID   Int
  website     Website      @relation(fields: [websiteID], references: [websiteID])
  postCollect postCollect?
}

model postCollect {
  postCollectID Int          @id @unique @default(autoincrement())
  dateTime      DateTime?
  title         String
  content       String
  linkExtractID Int          @unique
  linksExtract  linksExtract @relation(fields: [linkExtractID], references: [linkID])
  postFinally   postFinally?
}

model postFinally {
  postFinallyID Int    @id @unique @default(autoincrement())
  title         String
  content       String
  summary       String
  keywords      String
  featuredPost  String

  authorID Int  @unique
  author   User @relation(fields: [authorID], references: [userID])

  postCollectID Int         @unique
  postCollect   postCollect @relation(fields: [postCollectID], references: [postCollectID])
}
